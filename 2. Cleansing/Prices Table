# PRICES
# Cek data null
print("Jumlah data null:")
print(df_mdb_prices.isnull().sum())

# Cek duplikat dan penanganan
print("Apakah terdapat data duplikat:")
print(df_mdb_prices.duplicated().any())
print("Apakah terdapat kolom ID duplikat:")
print(df_mdb_prices['_id'].duplicated().any())

# Cek type data (menyelaraskan formatnya)
print("Type data tabel IP Addresses sebelum penanganan:")
print(df_mdb_prices.dtypes)

def correct_id_prices(value):
    return bool(re.match(r"^PR\d{4}$", str(value)))
invalid_ids = df_mdb_prices[~df_mdb_prices['_id'].apply(correct_id_prices)]
print(f"Jumlah ID yang tidak konsisten: {invalid_ids.shape[0]}")
print(invalid_ids[['_id']])

df_mdb_prices['bulk_discount'] = pd.to_numeric(df_mdb_prices['bulk_discount'], errors='coerce')
df_mdb_prices['discount'] = pd.to_numeric(df_mdb_prices['discount'], errors='coerce')
df_mdb_prices['discount_quantity'] = pd.to_numeric(df_mdb_prices['discount_quantity'], errors='coerce')
df_mdb_prices['original'] = pd.to_numeric(df_mdb_prices['original'], errors='coerce')
